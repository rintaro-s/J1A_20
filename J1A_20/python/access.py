# coding: UTF-8
import asyncio
import websockets
import requests


async def handler(websocket, path):
    while True:
        data = await websocket.recv()
        

        def send_inference_request(data):
            url = 'http://192.168.0.208:1234/v1/completions'
            headers = {'Content-Type': 'application/json'}
            data = {
                'prompt': "次の、鳥羽商船高等専門学校に関する質問に答えて。入学したいなと思わせるように書いて。おうむ返しや、「はい」か「いいえ」だけなどはやめて。簡潔に答えて。うその情報は書かないで。150文字以内で答えて。妹のような口調で話して。質問に対する簡潔な答えだけを出力する。質問を繰り返さない。＃＃＃鳥羽商船とは＃＃＃鳥羽商船の概要：鳥羽商船高等専門学校（とばしょうせんこうとうせんもんがっこう）は、三重県鳥羽市にある国立の高等専門学校。全国に5つある商船高専のうちの1つであり、最も歴史のある高専である。よく、「鳥羽商船」もしくは「商船」、「商船学校」と呼ばれている。また、学生寮である暁寮が存在する。 設置学科： 情報機械システム工学科:（2019年度から新しく設置された。学生が希望する情報、機械、電気・電子の科目からなるユニット制で学ぶ。通称 J科） 電子機械工学科:（Mechatronics 通称 M科、2018年度入学生まで）制御情報工学科（Information 通称 I科、2018年度入学生まで）卒業時には準学士の称号が授与される。 教育目標:情報機械システム工学科は、情報工学、電気電子工学、機械工学を基礎とし、学生自身の個性に応じたカリキュラムを選択することで、地域に貢献し日本の産業を支える実践的技術者としての専門知識・技術を身につけることを目標とする。専攻科高等専門学校における教育の基礎の上に高度の専門的学術を教授し、専門領域の幅を拡大すると共に、国際的感覚と広い視野を持って研究・技術開発能力、創造能力を発揮できる実践的専門技術者を育成する。 学科概要:情報機械システム工学科は、情報工学を主分野とし、電気電子工学と機械工学を加えた３分野について専門的知識及び技術を学びます。低学年ではプログラミングに加え、3分野の工学基礎・専門共通基盤を学習します。高学年では自らの個性に合わせて「専門性」と「志向性」を決定するオーダーメイド型カリキュラムを提供します。1年次から地域課題を解決するPBL（Project Based Learning）チームに所属し、机上の学習に留まらず、地域産業や文化を理解し工学的な解決法を提案できる実践的技術者を育成する教育を行います。 専攻科高等専門学校の専攻科は，学科５年ないし５年半に渡る教育の上に，さらに高度な専門教育を教授するために設置されています。本校では，商船学科を基礎とする「海事システム学専攻」と，電子機械工学科と制御情報工学科を基礎とする「生産システム工学専攻」の２専攻が設置されています。専攻科を修了した学生は４年制大学卒業と同等と認められ，学士の学位取得が可能となります。卒業後は企業への就職だけではなく，大学院修士課程への進学も可能であり，その後は、博士課程への進学の途も開けることになります。＃＃専門授業内容 工学リテラシ:工学リテラシは、ITパスポートの内容をもとに授業を進めていきます。パソコンについての基礎的なことを学習します。もし、中学生からパソコンが好きで勉強していたら暇かもしれません。ですが、パソコン初心者でも１からパソコンに詳しくなるのでとてもいい感じです。将来現場で使えるような知識がつくのでとてもいい感じです。前期期末テストまでにHTML等も学習します。(css,js,php等はまだ)プログラミング:プログラミングは、C言語を学習していきます。VScodeのインストールからしていくのでこちらも初心者から学習できます。3か月である程度使える程度のプログラミングが学習できます。学科概論:先生たちが何をしているのかを聞いて、視野を広くするやつ？まだよく分かってない。＃＃＃質問："+data+"＃＃＃回答：",
                'temperature': 0.7,
                'max_tokens': 150
            }

            response = requests.post(url, headers=headers, json=data)
            if response.status_code == 200:
                generated_text = response.json()["choices"][0]["text"]
                websocket.send(generated_text)
                return generated_text
            else:
                print("エラー:", response.status_code, response.text)
                return "エラー：接続に失敗しました。もう一度やり直してください。・tobawifiを使用していませんか？　・サーバーは動いていますか？　・インターネットに接続していますか？"
    
        await websocket.send(send_inference_request(data))
    
            

async def main():
    async with websockets.serve(handler, "", 8000):
        await asyncio.Future()

if __name__ == "__main__":
    asyncio.run(main())
